run:
  timeout: 3m
  allow-parallel-runners: true

linters-settings:
  cyclop:
    max-complexity: 30
    package-average: 10.0

  errcheck:
    check-type-assertions: false

  exhaustive:
    check:
    - switch
    - map

  exhaustruct:
    exclude:
      # private libs
      - "^net/http.Client$"
      - "^net/http.Cookie$"
      - "^net/http.Request$"
      - "^net/http.Response$"
      - "^net/http.Server$"
      - "^net/http.Transport$"
      - "^net/url.URL$"
      - "^os/exec.Cmd$"
      - "^reflect.StructField$"
      # public libs
      - "^github.com/Shopify/sarama.Config$"
      - "^github.com/Shopify/sarama.ProducerMessage$"
      - "^github.com/mitchellh/mapstructure.DecoderConfig$"
      - "^github.com/prometheus/client_golang/.+Opts$"
      - "^github.com/spf13/cobra.Command$"
      - "^github.com/spf13/cobra.CompletionOptions$"
      - "^github.com/stretchr/testify/mock.Mock$"
      - "^github.com/testcontainers/testcontainers-go.+Request$"
      - "^github.com/testcontainers/testcontainers-go.FromDockerfile$"
      - "^golang.org/x/tools/go/analysis.Analyzer$"
      - "^google.golang.org/protobuf/.+Options$"
      - "^gopkg.in/yaml.v3.Node$"

  funlen:
    lines: 100
    statements: 50

  gocognit:
    min-complexity: 20

  gocritic:
    settings:
      captLocal:
        paramsOnly: false
      underef:
        skipRecvDeref: false

  mnd:
    ignored-functions:
    - os.Chmod
    - os.Mkdir
    - os.MkdirAll
    - os.OpenFile
    - os.WriteFile
    - prometheus.ExponentialBuckets
    - prometheus.ExponentialBucketsRange
    - prometheus.LinearBuckets

  gomodguard:
    blocked:
      # List of blocked modules.
      # Default: []
      modules:
      - github.com/golang/protobuf:
          recommendations:
          - google.golang.org/protobuf
          reason: "see https://developers.google.com/protocol-buffers/docs/reference/go/faq#modules"
      - github.com/satori/go.uuid:
          recommendations:
          - github.com/google/uuid
          reason: "satori's package is not maintained"
      - github.com/gofrs/uuid:
          recommendations:
          - github.com/google/uuid
          reason: "gofrs' package is not go module"

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    disable:
    - fieldalignment # too strict
    # Settings per analyzer.
    settings:
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        strict: true

  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns.
    # Default: 30
    max-func-lines: 0

  nolintlint:
    # Exclude following linters from requiring an explanation.
    # Default: []
    allow-no-explanation: [ funlen, gocognit, lll ]
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false
    require-specific: true

  rowserrcheck:
    # database/sql is always checked
    # Default: []
    packages:
      - github.com/jmoiron/sqlx

  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: camel
        yaml: kebab
        xml: camel

  tenv:
    # The option `all` will run against whole test files (`_test.go`) regardless of method/function signatures.
    # Otherwise, only methods that take `*testing.T`, `*testing.B`, and `testing.TB` as arguments are checked.
    # Default: false
    all: true

linters:
  enable-all: true
  disable:
  - containedctx
  - depguard # [replaced by gomodguard] checks if package imports are in a list of acceptable packages
  - exportloopref
  - exhaustruct
  - execinquery
  - gci
  - godox
  - gomnd
  - gosmopolitan
  - ireturn
  - protogetter
  - thelper
  - varnamelen
  - wsl

issues:
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 50

  exclude-rules:
  - source: "(noinspection|TODO)"
    linters: [ godot ]
  - source: "//noinspection"
    linters: [ gocritic ]
  - path: "_test\\.go"
    linters:
    - bodyclose
    - dupl
    - funlen
    - goconst
    - gosec
    - noctx
    - wrapcheck
